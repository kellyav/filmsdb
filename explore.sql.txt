{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red47\green50\blue64;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c23922\c25882\c31765;\cssrgb\c100000\c100000\c100000;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
%%sql\
\
-- see the database\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 SELECT * from films;\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 -- 
\fs32 \cf3 \cb4 \expnd0\expndtw0\kerning0
selects all details for films released in 2016. \

\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 SELECT * \
FROM films\
WHERE release_year = 2016;\
\
\
-- 
\fs32 \cf3 \cb4 \expnd0\expndtw0\kerning0
selects all details for \'91French\'92 films. 
\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
SELECT *\
FROM films\
WHERE language= 'French\'92;\
\
\
\pard\pardeftab720\partightenfactor0

\fs32 \cf3 \cb4 \expnd0\expndtw0\kerning0
-- Get all details for Spanish language films released after 2000, but before 2010.
\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 SELECT * \
FROM films\
WHERE language='Spanish' AND release_year> 2000 AND release_year <2010;\
\
\'97Lets get more specific\'85 \
-- 
\fs32 \cf3 \cb4 \expnd0\expndtw0\kerning0
Get the title and release year for films released in the 90s, filters the records to only include French or Spanish language films, and only return films that took in more than $2M gross.
\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
SELECT title, release_year\
FROM films\
WHERE (release_year >= 1990 AND release_year < 2000) AND (language= 'French' OR language= 'Spanish')\
AND gross > 2000000;\
\
\
-- 
\fs32 \cf3 \cb4 \expnd0\expndtw0\kerning0
Get the title and release year of all films released between 1990 and 2000 (inclusive), select only films that have budgets over $100 million, only return Spanish or French language films.\
SELECT title, release_year \
FROM films\
WHERE (release_year BETWEEN 1990 AND 2000)\
AND budget > 100000000 \
AND (language= 'Spanish' OR language= 'French');\

\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
-- 
\fs32 \cf3 \cb4 \expnd0\expndtw0\kerning0
Get the title and release year of all films released in 1990 or 2000 that were longer than two hours.\
SELECT title, release_year\
FROM films\
WHERE release_year IN (1990, 2000)\
AND duration > 120;\
\
--Get the title and language of all films which were in English, Spanish, or French.\
\pard\pardeftab720\partightenfactor0
\cf3 \cb4 SELECT title, language\
FROM films\
WHERE language IN ('English', 'Spanish', 'French');\
\
\
--Get the title and certification of all films with an NC-17 or R certification.\
SELECT title, certification\
FROM films\
WHERE certification IN ('R', 'NC-17')\
\
--Get the names of people who are still alive\
SELECT name\
FROM people\
WHERE deathdate IS NULL;\
\
--Get the title of every film which doesn't have a budget associated with it.\
SELECT title \
FROM films\
WHERE budget IS NULL;\
\
--Get the number of films which don't have a language associated with them.\
SELECT COUNT(*)\
FROM films\
WHERE language IS NULL;\
\
--Get the names of all people whose names begin with 'B'.\
SELECT name\
FROM people\
WHERE name LIKE 'B%';\
\
--Get the names of people whose names have 'r' as the second letter.\
SELECT name\
FROM people\
WHERE name LIKE '_r%';\
\
--Get the names of people whose names don't start with A\
SELECT name\
FROM people\
WHERE name NOT LIKE 'A%';\
\
--total duration of all films.\
SELECT SUM(duration)\
FROM films;\
\
--average duration\
SELECT AVG(duration)\
from films;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf3 \cb4 \
--duration of the shortest film\
SELECT MIN(duration)\
FROM films;\
\
--duration of the longest film\
SELECT MAX(duration)\
FROM films;\
\
--total amount grossed by all films.\
SELECT SUM(gross)\
FROM films;\
\
--average amount grossed by all films\
SELECT AVG(gross)\
FROM films;\
\
--amount grossed by the worst performing film.\
SELECT MIN(gross)\
FROM films;\
\
--amount grossed by the best performing film.\
SELECT MAX(gross)\
FROM films;\
\
--total amount grossed by all films made in the year 2000 or later.\
SELECT SUM(gross)\
FROM films\
WHERE release_year >= 2000;\
\
--average amount grossed by all films whose titles start with the letter 'A'.\
SELECT AVG(gross)\
FROM films\
WHERE title LIKE 'A%';\
\
--amount grossed by the worst performing film in 1994.\
SELECT MIN(gross)\
FROM films\
WHERE release_year = 1994;\
\
\'97amount grossed by the best performing film between 2000 and 2012, inclusive\
SELECT MAX(gross)\
FROM films\
WHERE release_year BETWEEN 2000 and 2012;\
\
--Get the title and net profit (the amount a film grossed, minus its budget) for all films. \
SELECT title, (gross-budget) AS net_profit\
FROM films;\
\
--Get the title and duration in hours for all films. The duration is in minutes, so you'll need to divide by 60.0 to get the duration in hours.\
SELECT title, (duration/60.0) AS duration_hours\
FROM films;\
\
--average duration in hours for all films, aliased as avg_duration_hours\
SELECT AVG(duration)/60.0 AS avg_duration_hours\
FROM films;\
\
-- percentage of people who are no longer alive\
SELECT COUNT(deathdate)*100.0 /COUNT(*) AS percentage_dead\
FROM people;\
\
--the number of years between the newest film and oldest film.\
SELECT MAX(release_year)- MIN(release_year) AS difference\
FROM films;\
\
--the number of decades the films table covers. \
SELECT  (MAX(release_year) - MIN(release_year )) /10.0 AS number_of_decades\
FROM films;\
\
}